#pragma once
class sucesiones
{
private:
	int f1,c1;
	int M[30][30];
public:
	sucesiones(int f1,int c1);
	void serie1();
	void serie2();
	void serie3();
	void serie4();
};



#include "StdAfx.h"
#include "sucesiones.h"
#include <iostream>
#include "math.h"
using namespace std;

sucesiones::sucesiones(int _f1, int _c1)
{
	f1=_f1;
	c1=_c1;
}
int sd(int n){
	int d,s=0;
	while(n>0){
		d=n%10;
		n=n/10;
		s=s+d;
	}
	return(s);
}
void sucesiones::serie1()
{
	int acum=0;
	for(int i=0;i<f1;i++)
	{
		for(int j=0;j<c1;j++)
		{
			acum=acum+3;
			M[i][j]=acum;
		}
	}

	for(int i=0;i<f1;i++)
	{
		for(int j=0;j<c1;j++)
		{
			cout<<M[i][j]<<" ";
		}
		cout<<endl;
	}

}
void sucesiones::serie2()
{
	int resto=0,num=0,numinv=0,acum=1;
	for(int i=0; i<f1; i++)
	{
		for(int j=0; j<c1; j++)
		{
			num=acum*acum;
			acum++;
			while(num>0)
			{
				resto=num%10;
				num=num/10;
				numinv=numinv*10+resto;
			}
			M[i][j]=numinv;
			resto=0;
			numinv=0;
			num=0;
		}
	}
	for(int i=0; i<f1; i++)
	{
		for(int j=0; j<c1; j++)
		{
			cout<<M[i][j]<<" ";
		}
		cout<<endl;
	}

}
void sucesiones::serie3()
{
	//1 1 2 4 8 16 23 28 38...
	int acum=0, num=0, n=0, cont=1;
	M[0][0]=1;
	for(int i=0; i<f1; i++)
	{
		for(int j=0; j<c1-1; j++)
		{
			num=M[i][j];
			while(num>0)
			{
				n=num%10;
				acum=acum+n;
				num=num/10;
				
			}
			M[i][j+1]=num+acum;
		}
	}
	for(int i=0; i<f1; i++)
	{
		for(int j=0; j<c1; j++)
		{
			cout<<M[i][j]<<" ";
		}
		cout<<endl;
	}
}
void sucesiones::serie4()
{
		int i,j,d=1,num=0;
		int s=0;
	for(i=0;i<f1;i++)
	{
		for(j=0;j<c1;j++)
		{
		  num=num+d;
		
			while(num>0)
			{
				d=num%10;
				num=num/10;
				s=s+d;
			}
		      M[i][j]=s;
		}
	}

									for(int i=0; i<f1; i++)
									{
									for(int j=0; j<c1; j++)
									{
										cout<<M[i][j]<<" ";
									}
									cout<<endl;
									}
}
// ejercicio2p3.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <iostream>
#include "conio.h"
#include "sucesiones.h"

using namespace std;

void main()
{
	int f1,c1,op,M[30][30];
	cout<<"ingrese el tamaño filas: ";
		cin>>f1;
	cout<<"ingrese el tamaño de columnas: ";
		cin>>c1;
	do{
		cout<<endl<<endl<<"**************M E N U ****************";
		cout<<endl<<"1.-matriz de 3 en 3";
		cout<<endl<<"2.-al cuadrado invertido";
		cout<<endl<<"3.-serie 3";
		cout<<endl<<"4.-";
		cout<<endl<<"0.-salir";
		cout<<endl<<"ingrese su opcion: ";
		cin>>op;
		sucesiones s1(f1,c1);
		switch (op)
		{
		case 1:
			s1.serie1();
			break;
		case 2:
			s1.serie2();
			break;
		case 3:
			s1.serie3();
			break;
		case 4:
			s1.serie4();
			break;
		case 0:
			cout<<"salir";
			break;
		default:
			cout<<"error"<<endl;
			break;
		}
	}while(op!=0);
	getch();
}
